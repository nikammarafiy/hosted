{
  "name": "winston-request-logger",
  "description": "Winston based http request logger for express.",
  "version": "1.0.7",
  "homepage": "https://github.com/wolfeidau/winston-request-logger",
  "author": {
    "name": "Mark Wolfe",
    "email": "mark@wolfe.id.au",
    "url": "http://www.wolfe.id.au/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/wolfeidau/winston-request-logger.git"
  },
  "bugs": {
    "url": "https://github.com/wolfeidau/winston-request-logger/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/wolfeidau/winston-request-logger/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/winston-request-logger",
  "engines": {
    "node": ">= 0.6.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "colors": "*",
    "useragent": "*",
    "winston": "*"
  },
  "devDependencies": {
    "grunt-simple-mocha": "~0.4.0",
    "should": "~3.1.0",
    "mocha": "~1.17.1",
    "grunt": "~0.4.2",
    "grunt-contrib-jshint": "~0.8.0",
    "connect": "~2.12.0",
    "supertest": "~0.9.0"
  },
  "keywords": [
    "express",
    "request",
    "winston",
    "logger"
  ],
  "readme": "# winston-request-logger\n\nWinston http request logger for express which is loosely based on [express-request-logger](https://github.com/mathrawka/express-request-logger).\n\n[![Build Status](https://secure.travis-ci.org/wolfeidau/winston-request-logger.png)](http://travis-ci.org/wolfeidau/winston-request-logger)\n\n## Getting Started\nIn an existing express project you can add the following configuration fragment to enable request logging to console,\nwith colors while in development or test.\n\n```javascript\n    app.configure('development', 'test', function(){\n        // Request Logging\n        var logger = new (winston.Logger)({ transports: [ new (winston.transports.Console)({colorize:true}) ] });\n        app.use(require('winston-request-logger').create(logger));\n    });\n```\n\n## Custom formats\nYou can optionally specify a second argument to `create(logger, [format])` to customize the object sent to Winston:\n\n```javascript\n\tapp.use(require('winston-request-logger').create(logger, {\n\t\t'responseTime': ':responseTime ms',\t\t// outputs '5 ms'\n\t\t'url': ':url[pathname]'\t\t\t\t\t// outputs '/some/path'\n\t}));\n```\n\n### Format tokens:\n* `:date` - Timestamp of the request.\n* `:statusCode` - HTTP status code of the request.\n* `:method` - HTTP method (GET, POST, etc.)\n* `:url[segment]` - Segment of the URL requested (Refer to the [url module](http://nodejs.org/api/url.html) for options).\n* `:responseTime` - Time it took for the response (in milliseconds).\n* `:ip` - The client's IP address (looks to `X-forwarded-for` header first).\n* `:userAgent` - The client's browser agent (parsed with [`useragent`](https://github.com/3rd-Eden/useragent).\n\n\n## Contributors\n<table><tbody>\n<tr><th align=\"left\">Mark Wolfe</th><td><a href=\"https://github.com/wolfeidau\">GitHub/wolfeidau</a></td><td><a href=\"http://twitter.com/wolfeidau\">Twitter/@wolfeidau</a></td></tr>\n<tr><th align=\"left\">Evan Dudla</th><td><a href=\"https://github.com/evNN\">GitHub/evNN</a></td><td><a href=\"http://twitter.com/evandudla\">Twitter/@evandudla</a></td></tr>\n</tbody></table>\n\n### Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt](https://github.com/gruntjs/grunt).\n\n\n## License\nCopyright (c) 2013 Mark Wolfe  \nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "winston-request-logger@1.0.7",
  "dist": {
    "shasum": "14cab67fa5681eb5433cc009e02649123037c8e6"
  },
  "_from": "winston-request-logger@^1.0.7",
  "_resolved": "https://registry.npmjs.org/winston-request-logger/-/winston-request-logger-1.0.7.tgz"
}
